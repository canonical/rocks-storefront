@use "sass:string";
@use "sass:map";
@use "vanilla-framework" as vanilla;
@use "settings" as settings;

@mixin p-charmhub-docstring {
  %vf-pseudo-border--top-light {
    @extend %vf-pseudo-border--top;

    position: relative;

    &::after {
      background-color: vanilla.$colors--light-theme--border-low-contrast;
    }
  }

  %bottom-section-padding--default {
    padding-bottom: vanilla.$spv--strip-regular * 0.5;

    @media (min-width: settings.$breakpoint-large) {
      padding-bottom: vanilla.$spv--strip-regular;
    }
  }

  %bottom-section-padding--shallow {
    @media only screen and (max-width: settings.$breakpoint-large) {
      padding-bottom: vanilla.$spv--large;
    }

    @media only screen and (min-width: settings.$breakpoint-large) {
      padding-bottom: vanilla.$spv--large;
    }
  }

  %bottom-section-padding--x-shallow {
    @media only screen and (max-width: settings.$breakpoint-large) {
      padding-bottom: vanilla.$spv--small;
    }

    @media only screen and (min-width: settings.$breakpoint-large) {
      padding-bottom: vanilla.$spv--small;
    }
  }

  %top-section-padding--x-shallow {
    @media only screen and (max-width: settings.$breakpoint-large) {
      padding-top: vanilla.$spv--small;
    }

    @media only screen and (min-width: settings.$breakpoint-large) {
      padding-top: vanilla.$spv--small;
    }
  }

  %docstring-block-common {
    @extend %bottom-section-padding--default;
  }

  %p-code {
    font-family: string.unquote(vanilla.$font-monospace);
    font-weight: vanilla.$font-weight-regular-text;
  }

  .p-docstring__intro {
    @extend %bottom-section-padding--shallow;

    overflow: auto; // prevent child margins overflowing
  }

  .p-docstring-block {
    @extend %docstring-block-common;
    @extend %vf-pseudo-border--top; // do not add padding on nested blocks

    &__header {
      @extend %bottom-section-padding--x-shallow;
      @extend %top-section-padding--x-shallow;
    }

    &__group + &__group {
      @extend %vf-pseudo-border--top-light;
    }

    &__arg-block + &__arg-block {
      @extend %vf-pseudo-border--top-light;
    }

    &--nested {
      @extend %docstring-block-common;
      @extend %bottom-section-padding--shallow;

      & + & {
        @extend %vf-pseudo-border--top; // do not add padding on nested blocks

        margin-top: vanilla.$spv--x-large;
      }

      &:last-child {
        padding-bottom: 0;
      }

      &__header {
        padding-top: 0;
      }
    }
  }

  .p-code {
    @extend %p-code;
  }

  $nudge-h4-mono: 0.4rem;
  $nudge-h4-mono--large: 0.1rem;

  .p-docstring-block__heading {
    @extend %p-code;

    @media (max-width: vanilla.$breakpoint-heading-threshold) {
      margin-bottom: -$nudge-h4-mono;
      padding-top: $nudge-h4-mono;
    }

    @media (min-width: vanilla.$breakpoint-heading-threshold) {
      margin-bottom: -$nudge-h4-mono--large;
      padding-top: $nudge-h4-mono--large;
    }

    @if vanilla.$increase-font-size-on-larger-screens {
      @media (min-width: vanilla.$breakpoint-x-large) {
        margin-bottom: -$nudge-h4-mono--large;
        padding-top: $nudge-h4-mono--large;
      }
    }
  }

  .p-docstring-block__heading + .p-docstring-block__short-description {
    @media (min-width: vanilla.$breakpoint-heading-threshold) {
      margin-top: -(vanilla.$sp-unit);
    }
  }

  .p-docstring {
    .p-docstring__intro > {
      p:first-child {
        @extend %vf-heading-4;
      }
    }

    .u-no-horizontal-space {
      margin-inline-start: -0.5rem;
    }
  }

  .p-text--dense {
    @extend %default-text;

    margin-bottom: 2 * vanilla.$sp-unit - map.get(vanilla.$nudges, p);
    margin-top: 0;

    @media (min-width: settings.$breakpoint-large) {
      margin-bottom: 2 * vanilla.$sp-unit - map.get(vanilla.$nudges, p);
    }
  }

  .p-text--dense + .p-text--dense {
    @media (max-width: settings.$breakpoint-large - 1) {
      margin-top: -2 * vanilla.$sp-unit;
    }
  }
}
